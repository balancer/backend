export default [
    {
        inputs: [{ internalType: 'contract IVault', name: 'vault', type: 'address' }],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [
            { internalType: 'uint256', name: 'fee', type: 'uint256' },
            { internalType: 'uint256', name: 'limit', type: 'uint256' },
        ],
        name: 'ExitHookFeeAboveLimit',
        type: 'error',
    },
    {
        inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
        name: 'OwnableInvalidOwner',
        type: 'error',
    },
    {
        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
        name: 'OwnableUnauthorizedAccount',
        type: 'error',
    },
    { inputs: [], name: 'PoolDoesNotSupportDonation', type: 'error' },
    { inputs: [{ internalType: 'address', name: 'sender', type: 'address' }], name: 'SenderIsNotVault', type: 'error' },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
            { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [],
        name: 'MAX_EXIT_HOOK_FEE',
        outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getHookFlags',
        outputs: [
            {
                components: [
                    { internalType: 'bool', name: 'enableHookAdjustedAmounts', type: 'bool' },
                    { internalType: 'bool', name: 'shouldCallBeforeInitialize', type: 'bool' },
                    { internalType: 'bool', name: 'shouldCallAfterInitialize', type: 'bool' },
                    { internalType: 'bool', name: 'shouldCallComputeDynamicSwapFee', type: 'bool' },
                    { internalType: 'bool', name: 'shouldCallBeforeSwap', type: 'bool' },
                    { internalType: 'bool', name: 'shouldCallAfterSwap', type: 'bool' },
                    { internalType: 'bool', name: 'shouldCallBeforeAddLiquidity', type: 'bool' },
                    { internalType: 'bool', name: 'shouldCallAfterAddLiquidity', type: 'bool' },
                    { internalType: 'bool', name: 'shouldCallBeforeRemoveLiquidity', type: 'bool' },
                    { internalType: 'bool', name: 'shouldCallAfterRemoveLiquidity', type: 'bool' },
                ],
                internalType: 'struct IHooks.HookFlags',
                name: '',
                type: 'tuple',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'enum AddLiquidityKind', name: '', type: 'uint8' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'uint256[]', name: 'amountsInRaw', type: 'uint256[]' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'bytes', name: '', type: 'bytes' },
        ],
        name: 'onAfterAddLiquidity',
        outputs: [
            { internalType: 'bool', name: '', type: 'bool' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'bytes', name: '', type: 'bytes' },
        ],
        name: 'onAfterInitialize',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'address', name: 'pool', type: 'address' },
            { internalType: 'enum RemoveLiquidityKind', name: 'kind', type: 'uint8' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'uint256[]', name: 'amountsOutRaw', type: 'uint256[]' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'bytes', name: '', type: 'bytes' },
        ],
        name: 'onAfterRemoveLiquidity',
        outputs: [
            { internalType: 'bool', name: '', type: 'bool' },
            { internalType: 'uint256[]', name: 'hookAdjustedAmountsOutRaw', type: 'uint256[]' },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    { internalType: 'enum SwapKind', name: 'kind', type: 'uint8' },
                    { internalType: 'contract IERC20', name: 'tokenIn', type: 'address' },
                    { internalType: 'contract IERC20', name: 'tokenOut', type: 'address' },
                    { internalType: 'uint256', name: 'amountInScaled18', type: 'uint256' },
                    { internalType: 'uint256', name: 'amountOutScaled18', type: 'uint256' },
                    { internalType: 'uint256', name: 'tokenInBalanceScaled18', type: 'uint256' },
                    { internalType: 'uint256', name: 'tokenOutBalanceScaled18', type: 'uint256' },
                    { internalType: 'uint256', name: 'amountCalculatedScaled18', type: 'uint256' },
                    { internalType: 'uint256', name: 'amountCalculatedRaw', type: 'uint256' },
                    { internalType: 'address', name: 'router', type: 'address' },
                    { internalType: 'address', name: 'pool', type: 'address' },
                    { internalType: 'bytes', name: 'userData', type: 'bytes' },
                ],
                internalType: 'struct IHooks.AfterSwapParams',
                name: '',
                type: 'tuple',
            },
        ],
        name: 'onAfterSwap',
        outputs: [
            { internalType: 'bool', name: '', type: 'bool' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'enum AddLiquidityKind', name: '', type: 'uint8' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'bytes', name: '', type: 'bytes' },
        ],
        name: 'onBeforeAddLiquidity',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'bytes', name: '', type: 'bytes' },
        ],
        name: 'onBeforeInitialize',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'enum RemoveLiquidityKind', name: '', type: 'uint8' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
            { internalType: 'bytes', name: '', type: 'bytes' },
        ],
        name: 'onBeforeRemoveLiquidity',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    { internalType: 'enum SwapKind', name: 'kind', type: 'uint8' },
                    { internalType: 'uint256', name: 'amountGivenScaled18', type: 'uint256' },
                    { internalType: 'uint256[]', name: 'balancesScaled18', type: 'uint256[]' },
                    { internalType: 'uint256', name: 'indexIn', type: 'uint256' },
                    { internalType: 'uint256', name: 'indexOut', type: 'uint256' },
                    { internalType: 'address', name: 'router', type: 'address' },
                    { internalType: 'bytes', name: 'userData', type: 'bytes' },
                ],
                internalType: 'struct IBasePool.PoolSwapParams',
                name: '',
                type: 'tuple',
            },
            { internalType: 'address', name: '', type: 'address' },
        ],
        name: 'onBeforeSwap',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    { internalType: 'enum SwapKind', name: 'kind', type: 'uint8' },
                    { internalType: 'uint256', name: 'amountGivenScaled18', type: 'uint256' },
                    { internalType: 'uint256[]', name: 'balancesScaled18', type: 'uint256[]' },
                    { internalType: 'uint256', name: 'indexIn', type: 'uint256' },
                    { internalType: 'uint256', name: 'indexOut', type: 'uint256' },
                    { internalType: 'address', name: 'router', type: 'address' },
                    { internalType: 'bytes', name: 'userData', type: 'bytes' },
                ],
                internalType: 'struct IBasePool.PoolSwapParams',
                name: '',
                type: 'tuple',
            },
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        name: 'onComputeDynamicSwapFee',
        outputs: [
            { internalType: 'bool', name: '', type: 'bool' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'address', name: '', type: 'address' },
            {
                components: [
                    { internalType: 'contract IERC20', name: 'token', type: 'address' },
                    { internalType: 'enum TokenType', name: 'tokenType', type: 'uint8' },
                    { internalType: 'contract IRateProvider', name: 'rateProvider', type: 'address' },
                    { internalType: 'bool', name: 'paysYieldFees', type: 'bool' },
                ],
                internalType: 'struct TokenConfig[]',
                name: '',
                type: 'tuple[]',
            },
            {
                components: [
                    { internalType: 'bool', name: 'disableUnbalancedLiquidity', type: 'bool' },
                    { internalType: 'bool', name: 'enableAddLiquidityCustom', type: 'bool' },
                    { internalType: 'bool', name: 'enableRemoveLiquidityCustom', type: 'bool' },
                    { internalType: 'bool', name: 'enableDonation', type: 'bool' },
                ],
                internalType: 'struct LiquidityManagement',
                name: 'liquidityManagement',
                type: 'tuple',
            },
        ],
        name: 'onRegister',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'removeLiquidityHookFeePercentage',
        outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
        stateMutability: 'view',
        type: 'function',
    },
    { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
    {
        inputs: [{ internalType: 'uint64', name: 'hookFeePercentage', type: 'uint64' }],
        name: 'setRemoveLiquidityHookFeePercentage',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const;
