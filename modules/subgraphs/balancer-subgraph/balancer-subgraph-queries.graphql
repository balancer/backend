query BalancerProtocolData(
    $skip: Int
    $first: Int
    $orderBy: Balancer_orderBy
    $orderDirection: OrderDirection
    $where: Balancer_filter
    $block: Block_height
) {
    balancers(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        id
        totalLiquidity
        totalSwapVolume
        totalSwapFee
        poolCount
    }
}

query BalancerUser($id: ID!, $block: Block_height) {
    user(id: $id, block: $block) {
        ...BalancerUser
    }
}

query BalancerUsers(
    $skip: Int
    $first: Int
    $orderBy: User_orderBy
    $orderDirection: OrderDirection
    $where: User_filter
    $block: Block_height
) {
    users(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerUser
    }
}

fragment BalancerUser on User {
    id
    sharesOwned(first: 1000) {
        id
        balance
        poolId {
            id
        }
    }
}

query BalancerPoolShares(
    $skip: Int
    $first: Int
    $orderBy: PoolShare_orderBy
    $orderDirection: OrderDirection
    $where: PoolShare_filter
    $block: Block_height
) {
    poolShares(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerPoolShare
    }
}

fragment BalancerPoolShare on PoolShare {
    id
    balance
}

query BalancerTokenPrices(
    $skip: Int
    $first: Int
    $orderBy: TokenPrice_orderBy
    $orderDirection: OrderDirection
    $where: TokenPrice_filter
    $block: Block_height
) {
    tokenPrices(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerTokenPrice
    }
}

fragment BalancerTokenPrice on TokenPrice {
    id
    poolId {
        id
    }
    asset
    amount
    pricingAsset
    price
    block
    timestamp
}

query BalancerTokens(
    $skip: Int
    $first: Int
    $orderBy: Token_orderBy
    $orderDirection: OrderDirection
    $where: Token_filter
    $block: Block_height
) {
    tokens(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerToken
    }
}

fragment BalancerToken on Token {
    id
    symbol
    address
    latestFXPrice
    latestUSDPrice
    totalVolumeNotional
    totalVolumeUSD
    totalSwapCount
    latestPrice {
        pricingAsset
        price
    }
}

fragment BalancerPool on Pool {
    id
    address
    poolType
    poolTypeVersion
    symbol
    name
    swapFee
    totalWeight
    totalSwapVolume
    totalSwapFee
    totalLiquidity
    totalShares
    swapsCount
    holdersCount
    createTime
    swapEnabled
    tokensList
    lowerTarget
    upperTarget
    mainIndex
    wrappedIndex
    factory
    expiryTime
    unitSeconds
    principalToken
    baseToken
    owner
    amp
    alpha
    beta
    sqrtAlpha
    sqrtBeta
    root3Alpha
    c
    s
    lambda
    tauAlphaX
    tauAlphaY
    tauBetaX
    tauBetaY
    u
    v
    w
    z
    dSq
    delta
    epsilon

    priceRateProviders {
        address
        token {
            address
        }
    }

    tokens {
        ...BalancerPoolToken
    }
}

fragment BalancerPoolToken on PoolToken {
    id
    symbol
    name
    decimals
    address
    balance
    weight
    priceRate
    isExemptFromYieldProtocolFee
    index
    token {
        latestFXPrice
    }
}

query BalancerPools(
    $skip: Int
    $first: Int
    $orderBy: Pool_orderBy
    $orderDirection: OrderDirection
    $where: Pool_filter
    $block: Block_height
) {
    pools(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerPool
    }
}

query BalancerPool($id: ID!, $block: Block_height) {
    pool(id: $id, block: $block) {
        ...BalancerPool
    }
}

query BalancerPoolHistoricalLiquidities(
    $skip: Int
    $first: Int
    $orderBy: PoolHistoricalLiquidity_orderBy
    $orderDirection: OrderDirection
    $where: PoolHistoricalLiquidity_filter
    $block: Block_height
) {
    poolHistoricalLiquidities(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        id
        poolId {
            id
        }
        poolTotalShares
        poolLiquidity
        poolShareValue
        pricingAsset
        block
    }
}

query BalancerPoolSnapshots(
    $skip: Int
    $first: Int
    $orderBy: PoolSnapshot_orderBy
    $orderDirection: OrderDirection
    $where: PoolSnapshot_filter
    $block: Block_height
) {
    poolSnapshots(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerPoolSnapshot
    }
}

fragment BalancerPoolSnapshot on PoolSnapshot {
    id
    pool {
        id
    }
    amounts
    totalShares
    swapVolume
    swapFees
    timestamp
    liquidity
    swapsCount
    holdersCount
}

query BalancerLatestPrices(
    $skip: Int
    $first: Int
    $orderBy: LatestPrice_orderBy
    $orderDirection: OrderDirection
    $where: LatestPrice_filter
    $block: Block_height
) {
    latestPrices(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerLatestPrice
    }
}

query BalancerLatestPrice($id: ID!) {
    latestPrice(id: $id) {
        ...BalancerLatestPrice
    }
}

query BalancerJoinExits(
    $skip: Int
    $first: Int
    $orderBy: JoinExit_orderBy
    $orderDirection: OrderDirection
    $where: JoinExit_filter
    $block: Block_height
) {
    joinExits(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerJoinExit
    }
}

fragment BalancerLatestPrice on LatestPrice {
    id
    asset
    price
    poolId {
        id
    }
    pricingAsset
    block
}

fragment BalancerJoinExit on JoinExit {
    amounts
    id
    sender
    timestamp
    tx
    type
    pool {
        id
        tokensList
    }
    valueUSD
}

query BalancerPortfolioData($id: ID!, $previousBlockNumber: Int!) {
    user(id: $id) {
        ...BalancerUser
    }
    previousUser: user(id: $id, block: { number: $previousBlockNumber }) {
        ...BalancerUser
    }
}

query BalancerPortfolioPoolsData($previousBlockNumber: Int!) {
    pools(first: 1000, where: { totalShares_gt: "0" }) {
        ...BalancerPool
    }

    previousPools: pools(first: 1000, where: { totalShares_gt: "0" }, block: { number: $previousBlockNumber }) {
        ...BalancerPool
    }
}

query BalancerTradePairSnapshots(
    $skip: Int
    $first: Int
    $orderBy: TradePairSnapshot_orderBy
    $orderDirection: OrderDirection
    $where: TradePairSnapshot_filter
    $block: Block_height
) {
    tradePairSnapshots(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerTradePairSnapshot
    }
}

fragment BalancerTradePairSnapshot on TradePairSnapshot {
    id
    totalSwapFee
    totalSwapVolume
    timestamp
    pair {
        token0 {
            address
            symbol
        }
        token1 {
            address
            symbol
        }
    }
}

query BalancerSwaps(
    $skip: Int
    $first: Int
    $orderBy: Swap_orderBy
    $orderDirection: OrderDirection
    $where: Swap_filter
    $block: Block_height
) {
    swaps(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerSwap
    }
}

fragment BalancerSwap on Swap {
    id
    caller
    tokenIn
    tokenInSym
    tokenOut
    tokenOutSym
    tokenAmountIn
    tokenAmountOut
    poolId {
        id
    }
    userAddress {
        id
    }
    timestamp
    tx
    valueUSD
}

query BalancerAmpUpdates(
    $skip: Int
    $first: Int
    $orderBy: AmpUpdate_orderBy
    $orderDirection: OrderDirection
    $where: AmpUpdate_filter
    $block: Block_height
) {
    ampUpdates(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerAmpUpdate
    }
}

fragment BalancerAmpUpdate on AmpUpdate {
    id
    poolId {
        id
    }
    startAmp
    endAmp
    startTimestamp
    endTimestamp
}

query BalancerGradualWeightUpdates(
    $skip: Int
    $first: Int
    $orderBy: GradualWeightUpdate_orderBy
    $orderDirection: OrderDirection
    $where: GradualWeightUpdate_filter
    $block: Block_height
) {
    gradualWeightUpdates(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...BalancerGradualWeightUpdate
    }
}

fragment BalancerGradualWeightUpdate on GradualWeightUpdate {
    id
    startTimestamp
    endWeights
    startWeights
    endWeights
    poolId {
        id
    }
}

query BalancerGetPoolsWithActiveUpdates($timestamp: BigInt!) {
    ampUpdates(where: { endTimestamp_gte: $timestamp }) {
        poolId {
            id
        }
    }
    gradualWeightUpdates(where: { endTimestamp_gte: $timestamp }) {
        poolId {
            id
        }
    }
}

query BalancerGetMeta {
    meta: _meta {
        block {
            number
        }
        deployment
        hasIndexingErrors
    }
}
